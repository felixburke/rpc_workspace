# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$HOME/.local/bin:$PATH

# Set the default shell to zsh when running zsh
export SHELL="$(which zsh)"

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
ZSH_THEME="agnoster"

# Set list of
plugins=(
  git
  zsh-autosuggestions
)

# Setups for oh-my-zsh
source $ZSH/oh-my-zsh.sh

# User configuration

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LANGUAGE=en_US:en

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Settings for the terminal
bindkey "^H" backward-kill-word
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word


# Settings for the prompt to show that we are in a docker container
export PROMPT="%K{black} 🐋 %K{blue}%F{black} %~ %f%k%F{blue}%f "  # Prefix the prompt with DOCKER

# Ignore some deprecation warnings
export PYTHONWARNINGS="ignore:::setuptools.command.install,ignore:::setuptools.command.easy_install,ignore:::pkg_resources,ignore:easy_install command is deprecated,ignore:setup.py install is deprecated"

# Limit ROS 2 communication to localhost (can be overridden when needed)
export ROS_DOMAIN_ID=24
export ROS_LOCALHOST_ONLY=1

# Set the default colcon workspace
export COLCON_WS="$HOME/turtlebot_workspace"

# Set the default log level for colcon
export COLCON_LOG_LEVEL=30

# Define a log layout
export RCUTILS_COLORIZED_OUTPUT=1
export RCUTILS_CONSOLE_OUTPUT_FORMAT="[{severity}] [{name}]: {message}"

# Set the default Middleware
export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

shell="$(basename "$SHELL")"
ros_releases=(
  "humble"
  "jazzy"
  "rolling"
)
distro="$ROS_DISTRO"

rid() {
  export ROS_DOMAIN_ID="$1"
  echo "ROS_DOMAIN_ID set to $ROS_DOMAIN_ID"
}

# Create a function to update the argcomplete so tab completion works.
# This needs to be called every time we source something ROS 2 related.
# Previous loading of bashcompinit is required.
update_ros2_argcomplete() {
  eval "$(register-python-argcomplete3 colcon)"
  eval "$(register-python-argcomplete3 ros2)"
}

# Source the ROS 2 setup files
if [[ -n "$distro" ]]; then
  source "/opt/ros/$distro/setup.$shell" &> /dev/null
else
  for release in "${ros_releases[@]}"; do
    if [[ -d "/opt/ros/$release" ]]; then
      source "/opt/ros/$release/setup.$shell" &> /dev/null
      distro="$release"
      break
    fi
  done
fi

# Update the tab completion
update_ros2_argcomplete

# ros aliases
alias rr='ros2 run'
alias rl='ros2 launch'

alias rte='ros2 topic echo'
alias rtl='ros2 topic list'
alias rth='ros2 topic hz'
alias rtp='ros2 topic pub'

alias rpl='ros2 param list'
alias rpg='ros2 param get'

# colcon aliases
alias cdc='cd $COLCON_WS'

alias cba='cdc && colcon build --symlink-install --continue-on-error'
alias cbs='cdc && colcon build --symlink-install --packages-select'
alias cb='cdc && colcon build --symlink-install --continue-on-error --packages-up-to'
alias cc='cdc && colcon clean packages --packages-select'
alias cca='cdc && colcon clean packages'
alias ct='cdc && colcon test --event-handlers console_direct+ --return-code-on-test-failure'

alias sr="source /opt/ros/$distro/setup.$shell && update_ros2_argcomplete"
alias sc="source \$COLCON_WS/install/setup.$shell && update_ros2_argcomplete"
alias sa='sr && sc'

# Set default editor
export VISUAL="vim"

# Some user instructions
echo "Hello there! Welcome to the TAMS ROS 2 development environment!"
echo "To compile all packages in the workspace use 'just build'. If you want to compile only a specific package use 'just build-package <package_name>'."
echo "Run 'xhost local:root' in a terminal on the host machine to enable GUI applications (e.g. rviz2) in the container. This needs to be done after every restart of the host machine."
